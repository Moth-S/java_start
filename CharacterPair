 //–î–∞–Ω–æ —á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ N (>0) –∏ —Å–∏–º–≤–æ–ª—ã c1 –∏ c2.
//üìå –ù–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–µ—Ä–Ω–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–ª–∏–Ω—ã N, –∫–æ—Ç–æ—Ä–∞—è
//—Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —á–µ—Ä–µ–¥—É—é—â–∏—Ö—Å—è —Å–∏–º–≤–æ–ª–æ–≤ c1 –∏ c2, –Ω–∞—á–∏–Ω–∞—è —Å c1.

import java.util.Scanner;

public class CharacterPair {

    public static void main(String[] args) {
        Scanner iScanner = new Scanner(System.in);
        int n = iScanner.nextInt();
        char c1 = iScanner.next().charAt(0);
        char c2 = iScanner.next().charAt(0);
        if (n % 2 == 0) {
            System.out.println(alternating–°haracters(n, c1, c2));
        } else {
            System.out.println("n –Ω–µ—á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ");
        }

        iScanner.close();
    }

    public static String alternating–°haracters(int n, char c1, char c2) {
        StringBuilder stringOfChar = new StringBuilder(n);
        for (int index = 0; index < n / 2; index++) {
            stringOfChar.append(c1).append(c2);
        }
        return stringOfChar.toString();
    }
}
